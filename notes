08/15

Installing k8s

kubeadm init fails

$ sudo kubeadm init
[sudo] password for cloud_user:
[init] Using Kubernetes version: v1.24.3
[preflight] Running pre-flight checks
error execution phase preflight: [preflight] Some fatal errors occurred:
        [ERROR CRI]: container runtime is not running: output: E0815
        21:48:51.858012    4642 remote_runtime.go:925] "Status from runtime
        service failed" err="rpc error: code = Unimplemented desc = unknown
        service runtime.v1alpha2.RuntimeService"
        time="2022-08-15T21:48:51Z" level=fatal msg="getting status of runtime:
        rpc error: code = Unimplemented desc = unknown service
        runtime.v1alpha2.RuntimeService"
        , error: exit status 1
Workaround* (doesn't work)
* https://stackoverflow.com/questions/72504257/i-encountered-when-executing-kubeadm-init-error-issue
* https://github.com/containerd/containerd/issues/4581

NEXT:
Go through the installation docs:
https://kubernetes.io/docs/setup/
https://kubernetes.io/docs/setup/production-environment/container-runtimes/#install-and-configure-prerequisites
install test cluster on la
install minikube
install hub on kube with synopsysctl / helm

08/16
TEST TOOLS:

Kind installed and running fine
Installing Hub with Helm3
$ helm repo add synopsys https://sig-repo.synopsys.com/artifactory/sig-cloudnative

$ BD_NAME="bd"
$ kubectl create ns ${BD_NAME}
BD_SIZE="sizes-gen03/10sph"

cd /opt/blackduck/hub-2022.7.0/kubernetes/blackduck
helm install --help
Usage:
  helm install [NAME] [CHART] [flags]

$ helm install ${BD_NAME} synopsys/blackduck --namespace ${BD_NAME} -f ${BD_SIZE}.yaml --set tlsCertSecretName=${BD_NAME}-blackduck-webserver-certificate

Error: INSTALLATION FAILED: failed pre-install: unable to build kubernetes
object for pre-install hook blackduck/templates/postgres-config.yaml: error validating "": error validating data: unknown object type "nil" in ConfigMap.data.HUB_POSTGRES_HOST

08/17
test with helm2

https://github.com/helm/helm/issues/5100#issuecomment-533787541
deleted cluster, starting from scratch

# creat cluster with kind

same error: 
 helm install ${BD_NAME} synopsys/blackduck --namespace ${BD_NAME} -f
 ${BD_SIZE}.yaml --set
 tlsCertSecretName=${BD_NAME}-blackduck-webserver-certificate
 Error: INSTALLATION FAILED: failed pre-install: unable to build kubernetes
 object for pre-install hook blackduck/templates/postgres-config.yaml: error
 validating "": error validating data: unknown object type "nil" in
 ConfigMap.data.HUB_POSTGRES_HOST
 
08/19

* fix Github config
* fixed apt google repo config

08/20

* add ssh keys to the Ubuntu nodes
ssh-keygen
ssh-copy-id -i $K8S_KEY_NAME $K8S_NODE

* fix Ubuntu script(correct Google repo)
* run script on multiple nodes
 1/ Install pssh
 sudo yum install -y pssh
 2/ Create hosts file
 vi ~/.pssh_hosts
 Contents
 [user@]host[:port]
 3/ Test
 pssh -h ~/.pssh_hosts -i "hostname"

* set no sudo passwd
  with NOPASSWD:ALL still promts for password
  https://unix.stackexchange.com/questions/666207/setting-nopasswd-for-a-user-still-promts-for-a-password

NEXT: 
  
08/21 

* fix nopasswd sudo
  1/ check user sudo permissions
  sudo -l -U cloud_user
  2/ Edit cloud_user sudo config:
  sudo visudo -f /etc/sudoers.d/90-cloud-init-users

* run install script with pssh
  pssh -h ~/.pssh_hosts -o ~/pssh-logs "bash $SCRIPTNAME"
  
  [FAILURE] Timed out, Killed by signal 9
  pssh command will only last 60 seconds if you not input -t option.

  pssh -t 3600 -h ~/.pssh_hosts -o ~/pssh-logs "bash 2_configure_nodes_ubuntu.sh"

* initialize cluster
  1/ On a control plane node 

sudo kubeadm init --pod-network-cidr 192.168.0.0/16 --kubernetes-version 1.24.4

# Setup kubectl
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl get nodes

# install Calico Networking
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

# print cluster join command
kubeadm token create --print-join-command

  2/ Use the printed join command on the worker nodes to add them to the
  cluster

  3/ Check installation
kubectl get nodes

* namespaces(common commands)

* Install an app into a cluster
  Install Jenkins
  https://www.jenkins.io/doc/book/installing/kubernetes/

  1/ create jenkins ns
  kubectl create ns jenkins

  2/ Install helm
  wget https://get.helm.sh/helm-v3.9.3-linux-amd64.tar.gz
  tar xzvf helm-v3.9.3-linux-amd64.tar.gz
  mkdir ~/bin
  mv linux-amd64/helm ~/bin
  helm version

  3/ Configure Helm
  helm repo add jenkinsci https://charts.jenkins.io
  helm repo update
  helm search repo jenkinsci

  4/ Create a persistent volume
  wget https://raw.githubusercontent.com/jenkins-infra/jenkins.io/master/content/doc/tutorials/kubernetes/installing-jenkins-on-kubernetes/jenkins-volume.yaml
  mv jenkins-volume.yaml jenkins-pv.yaml
  k apply -f jenkins-volume.yaml


  5/ Create a service account
  wget https://raw.githubusercontent.com/jenkins-infra/jenkins.io/master/content/doc/tutorials/kubernetes/installing-jenkins-on-kubernetes/jenkins-sa.yaml
  kubectl apply -f jenkins-sa.yaml

  6/ Install Jenkins
  6.1 
  wget https://raw.githubusercontent.com/jenkinsci/helm-charts/main/charts/jenkins/values.yaml
  mv values.yaml jenkins-values.yaml
  
  6.2 Modify jenkins-values.yaml
  nodePort: 32000
  storageClass: jenkins-pv
  serviceAccount:
    create: false
    name: jenkins
    annotations: {}
  
  6.3 Install chart
  chart=jenkinsci/jenkins
  helm install jenkins -n jenkins -f jenkins-values.yaml $chart

  6.4 Get your 'admin' user password by running:
  $ jsonpath="{.data.jenkins-admin-password}"
  $ secret=$(kubectl get secret -n jenkins jenkins -o jsonpath=$jsonpath)
  $ echo $(echo $secret | base64 --decode)

  6.5 Get the Jenkins URL to visit by running these commands in the same shell:
  $ jsonpath="{.spec.ports[0].nodePort}"
  $ NODE_PORT=$(kubectl get -n jenkins -o jsonpath=$jsonpath services jenkins)
  $ jsonpath="{.items[0].status.addresses[0].address}"
  $ NODE_IP=$(kubectl get nodes -n jenkins -o jsonpath=$jsonpath)
  $ echo http://$NODE_IP:$NODE_PORT/login

  6.6 Installation failed
  kubectl get pods -n jenkins
  NAME        READY   STATUS                  RESTARTS       AGE
  jenkins-0   0/2     Init:CrashLoopBackOff   6 (4m7s ago)   10m
  
  


08/22

* Troubleshoot Jenkins Installation
kubectl describe pod -n jenkins jenkins-0

Events:
Back-off restarting failed container

    * containers
    jenkins
    config-reload

    kubectl logs -n jenkins jenkins-0 -c jenkins
    Error from server (BadRequest):
    container "jenkins" in pod "jenkins-0" is waiting to start:
    PodInitializing

kubectl get pod jenkins-0 -n jenkins --template '{{.status.initContainerStatuses}}'

Change context to the jenkins ns
kubectl config set-context --current --namespace=jenkins

* Enable kubectl autocompletion 

echo 'source <(kubectl completion bash)' >>~/.bashrc
echo 'alias k=kubectl' >>~/.bashrc
echo 'complete -o default -F __start_kubectl k' >>~/.bashrc
source ~/.bashrc

Check init container logs
kubectl logs jenkins-0 -c init

/var/jenkins_config/apply_config.sh: 4: cannot create
/var/jenkins_home/jenkins.install.UpgradeWizard.state: Permission denied

https://github.com/jenkinsci/helm-charts/issues/210

* check applied values
helm get values jenkins

* add gid annotation to jenkins-volume.yaml
https://github.com/jenkinsci/helm-charts/issues/210#issuecomment-912690784
still the same error

* applied podSecurityContextOverride 
https://github.com/jenkinsci/helm-charts/issues/210#issuecomment-916217915

pod stuck in PENDING status
describe pod 
Events
FailedScheduling 0/3 nodes are available: 3 pod has unbound immediate PersistentVolumeClaims.
preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.
https://stackoverflow.com/questions/64341805/2-pod-has-unbound-immediate-persistentvolumeclaims-kubernetes


08/24

* try implementing solution with NFS share as described here:
https://github.com/jenkinsci/helm-charts/issues/210#issuecomment-1077827937

1/ Setup NFS server
sudo apt update && sudo apt install nfs-kernel-server

2/ Verify the enabled NFS versions
sudo cat /proc/fs/nfsd/versions

3/ Create NFS root dir and kubedata dir:
sudo mkdir -p /srv/nfs4/backups
sudo mount --bind /kubedata /srv/nfs4/kubedata/

4/ Export the directory
sudo vi /etc/exports

/srv/nfs4/kubedata 172.31.103.173(rw,sync,no_subtree_check)
172.31.96.249(rw,sync,no_subtree_check) 172.31.101.91(rw,sync,no_subtree_check)

sudo exportfs -ar
# view active exports
sudo exportfs -v

5/ Configure clients
sudo apt update && sudo apt install nfs-common
sudo mkdir /kubedata
sudo chmod 777 /kubedata
sudo mount -t nfs -o vers=4 172.31.103.173:/srv/nfs4/kubedata /kubedata/
mount.nfs: access denied by server while mounting 172.31.103.173:/kubedata

https://unix.stackexchange.com/questions/106122/mount-nfs-access-denied-by-server-while-mounting-on-ubuntu-machines

6/ Install Jenkins
Error:
FailedScheduling 0/3 nodes are available: 3 persistentvolumeclaim not found
new error:
pod has unbound immediate PersistentVolumeClaims

7/ Uninstall Jenkins
helm delete jenkins
k delete pvc jenkins-pvc
k delete pv jenkins-pv
k delete sa jenkins

STATUS: 
* Jenkins install
After doing nfs provisioning still get permissions error:
/var/jenkins_config/apply_config.sh: 4: cannot create
/var/jenkins_home/jenkins.install.UpgradeWizard.state: Permission denied


08/25

* Continue troubleshooting jenkins install.
* updated jenkins deploy config

new error:
java.io.UncheckedIOException: java.nio.file.FileSystemException: /root/.cache:
Read-only file system
https://stackoverflow.com/questions/49614034/kubernetes-deployment-read-only-filesystem-error
https://www.thorsten-hans.com/read-only-filesystems-in-docker-and-kubernetes/
https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/README.md


NEXT:

* write Ubuntu install readme

08/26

* Continue troubleshooting jenkins install.
new error:
java.io.UncheckedIOException: java.nio.file.FileSystemException: /root/.cache:
Read-only file system
https://stackoverflow.com/questions/49614034/kubernetes-deployment-read-only-filesystem-error
https://www.thorsten-hans.com/read-only-filesystems-in-docker-and-kubernetes/
https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/README.md

Deploying with deployment yaml instead of helm
1/ create deployment
wget https://raw.githubusercontent.com/jenkins-infra/jenkins.io/master/content/doc/tutorials/kubernetes/installing-jenkins-on-kubernetes/jenkins-deployment.yaml
k create -f jenkins-deployment.yaml

2/ create service
wget https://raw.githubusercontent.com/jenkins-infra/jenkins.io/master/content/doc/tutorials/kubernetes/installing-jenkins-on-kubernetes/jenkins-service.yaml
k create -f jenkins-service.yaml

* added nginx deployment config


NEXT:
* sample TLS application:
https://mayankkapoor.medium.com/ssl-is-easy-enabling-https-for-your-application-on-kubernetes-easily-with-this-step-by-step-guide-45f7e15f8b7c
* test centos deploy script on RHEL.
* test http apps from non-corp laptop
* test jenkins deployment on killercoda
https://killercoda.com/playgrounds/scenario/kubernetes
* TLS in k8s cluster
https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster/


08/30

* centos install

08/31

* centos install - install containerd w/o docker

09/01

* centos install
 - Setting snapshotter to native seems to be solving the issue
https://github.com/kubernetes-sigs/cri-tools/issues/436#issuecomment-464290289

09/02

* installing cnc on kind
  1/ Installed version of kind
  kind v0.11.1 go1.16.4 linux/amd64

  2/ Updating to 0.14

  3/ Setup sig-gitlab access

  4/ Clone cnc repo

  5/ Install

09/03

* configuring / working w cnc


References:
* https://limbenjamin.com/articles/running-https-ssh-vpn-on-port-443.html
* k8s nfs storage
https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/README.md
* Centos 7 install:
https://www.soughttech.com/front/article/16709/viewArticle
